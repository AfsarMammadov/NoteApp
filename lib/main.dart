import 'package:NoteApp/note_body.dart';import 'package:NoteApp/parser.dart';import 'package:NoteApp/utils/database.dart';import 'package:flutter/material.dart';import 'package:fluttertoast/fluttertoast.dart';void main(){  runApp(MyApp());}class MyApp extends StatelessWidget {  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'NoteApp',      initialRoute: '/',      routes: {        '/': (context) => Home(),        '/NoteBody': (context) => NoteBody(),      },      debugShowCheckedModeBanner: false,    );  }}class Home extends StatefulWidget {  @override  _HomeState createState() => _HomeState();}class _HomeState extends State<Home> {  final header=TextEditingController();  final note=TextEditingController();  @override  Widget build(BuildContext context) {    bool checked=false;    return Scaffold(      appBar: AppBar(        title: Text('NoteApp'),        backgroundColor: Colors.blueAccent,      ),      body: FutureBuilder(          future: getData(),          builder: (context,snapshot){            List data = List();            int length;            if(snapshot.hasData) {              length=snapshot.data.length;              for (int i = snapshot.data.length - 1; i >= 0; i--) {                data.add(snapshot.data[i]);              }            }            return data.isEmpty ?            Center(              child: Icon(Icons.event_available,                size: 120,                color: Colors.blue.withOpacity(0.9),              ),            ) :            ListView.builder(              itemCount: data.length,              itemBuilder: (context, index){                return Container(                    height: 80,                    margin: EdgeInsets.all(5),                    decoration: BoxDecoration(                      color: Colors.lightBlueAccent.withOpacity(0.1),                      borderRadius: BorderRadius.all(Radius.circular(10)),                      border: Border.all(color: Colors.blue, width: 2),                    ),                    child: InkWell(                      onTap: (){                        int i=length-1-index;                        int id=snapshot.data[length-1-index]['id'];                        Navigator.push(context, MaterialPageRoute(builder: (context)=> NoteBody(i: i,id: id)));                      },                      child: ListTile(                        contentPadding: EdgeInsets.all(5),                        isThreeLine: true,                        title: Text(                          '${data[index]['header']}',                          style: TextStyle(fontSize: 18),                        ),                        subtitle: Text(                          '${data[index]['date']}',                          style: TextStyle(fontSize: 16,fontStyle: FontStyle.italic),                        ),                        trailing: GestureDetector(                          onTap: (){                            showDialog(                              context: context,                              builder: (context){                                return AlertDialog(                                  title: Text('Delete a note'),                                  content: Text('Are you sure to delete a note?'),                                  actions: [                                    FlatButton(                                        onPressed: (){                                          Navigator.pop(context);                                        },                                        child: Text('Cancel')),                                    FlatButton(                                        onPressed: (){                                          int id=snapshot.data[length-1-index]['id'];                                          setState(() {                                            delete(id);                                            Navigator.pop(context);                                          });                                        },                                        child: Text('Yes')),                                  ],                                );                              }                            );                          },                          child: Icon(                            Icons.done_outline,                            color: Colors.blue,                          ),                        ),                      ),                    ),                  );              },            );          },      ),      floatingActionButton: FloatingActionButton(        child: Icon(Icons.create),        onPressed: _createDialog,        backgroundColor: Colors.blueAccent,      ),    );  }  _createDialog(){    showDialog(      context: context,      builder: (BuildContext context){        header.text='';        note.text='';        return AlertDialog(          title: Text('Create a note'),          titleTextStyle: TextStyle(            color: Colors.blue,            fontSize: 18,          ),          content: SingleChildScrollView(            child: Container(              child: Column(                children: [                  Container(                    margin: EdgeInsets.all(10),                    height: 80,                    decoration: BoxDecoration(                      borderRadius: BorderRadius.all(Radius.circular(10)),                      border: Border.all(color: Colors.blue, width: 1),                    ),                    child: TextField(                      controller: header,                      maxLines: 1,                      maxLength: 25,                      style: TextStyle(fontSize: 18),                      decoration: InputDecoration(                        contentPadding: EdgeInsets.all(3),                        hintText: 'header',                        border: InputBorder.none,                      ),                    ),                  ),                  Container(                    margin: EdgeInsets.all(10),                    height: 200,                    decoration: BoxDecoration(                      borderRadius: BorderRadius.all(Radius.circular(10)),                      border: Border.all(color: Colors.blue, width: 1),                    ),                    child: TextField(                      controller: note,                      keyboardType: TextInputType.multiline,                      maxLines: null,                      style: TextStyle(fontSize: 18),                      decoration: InputDecoration(                        contentPadding: EdgeInsets.all(3),                        hintText: 'note',                        border: InputBorder.none,                      ),                    ),                  ),                ],              ),            ),          ),          contentPadding: EdgeInsets.all(10),          actions: [            FlatButton(              onPressed: (){                Navigator.pop(context);                },              child: Text(                'Cancel',                style: TextStyle(fontSize: 18),              ),            ),            FlatButton(              onPressed: (){                setState(() {                  String headerTxt=header.text.trim();                  String noteTxt=note.text.trim();                  if(headerTxt!='' && noteTxt!=''){                    String date=dateParser(DateTime.now().toString());                    insertToTable(headerTxt, noteTxt, date);                    Navigator.pop(context);                  }                  else{                    Fluttertoast.showToast(                      msg: 'Empty fields not allowed here',                      toastLength: Toast.LENGTH_SHORT,                      gravity: ToastGravity.BOTTOM,                      backgroundColor: Colors.white.withOpacity(0.6),                    );                  }                });              },              child: Text(                'Create',                style: TextStyle(fontSize: 18),              ),            ),          ],          shape: RoundedRectangleBorder(            borderRadius: BorderRadius.all(Radius.circular(10)),          )        );      }    );  }} insertToTable(String header, String note, String date) async{  DatabaseHandler db=DatabaseHandler.getInstance();  await db.insert(header, note, date);} getData() async {  DatabaseHandler db = DatabaseHandler.getInstance();  List list=await db.getAllTheData();  return list;} delete(int i) async{  DatabaseHandler db=DatabaseHandler.getInstance();  await db.delete(i); } getIds()async{  DatabaseHandler db=DatabaseHandler.getInstance();  var list=await db.getIds();  return list; }